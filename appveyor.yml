image: Visual Studio 2017

install:
  - docker version


build_script:
  - ver
  - SET PATH=%PATH%;C:\Program Files\Git\usr\bin
  - ps: Get-Command ssh-add
  - ps: Get-Command ssh-keygen
  - ps: Get-Command ssh-keyscan
  - ps: |
      $sshagentres = ssh-agent
      $env:SSH_AUTH_SOCK = [System.Text.RegularExpressions.Regex]::Match($sshagentres, "(?<=SSH_AUTH_SOCK=).+?(?=;)").Value
      $env:SSH_AGENT_PID = [System.Text.RegularExpressions.Regex]::Match($sshagentres, "(?<=SSH_AGENT_PID=).+?(?=;)").Value
  - ps: |
      cd ${env:USERPROFILE}/.ssh
      ssh-keygen -t ecdsa -N '""' -C "test@example.com" -f id_ecdsa
      cat id_ecdsa.pub
      cat id_ecdsa
      ls
      echo $env:USERPROFILE
      echo $env:SSH_AUTH_SOCK
      echo $env:SSH_AGENT_PID
      cat id_ecdsa.pub > "${env:USERPROFILE}/.ssh/authorized_keys"
      echo starting
      ssh-add -L
      echo ssh-add
  - ps: |
      $ErrorActionPreference = 'SilentlyContinue'
      ssh-add -q
  - ps: ssh-add -L
  - ps: |
      cd /projects/boondock
      $ErrorActionPreference = 'Stop'
      cd resources/dockerfiles/windows/git-server
      docker build -t git-server -f Dockerfile .
      cd /projects/boondock
      mkdir host_key
      ssh-keygen -t ecdsa -N '""' -f host_key/ssh_host_ecdsa_key
      docker run -d --rm --name git -v C:\projects\boondock\host_key:C:\host_key -v ${env:USERPROFILE}\.ssh:C:\Users\ContainerAdministrator\.ssh -p 2222:22 git-server C:/OpenSSH-Win64/sshd.exe -h C:\host_key\ssh_host_ecdsa_key -f C:\git\etc\ssh\sshd_config

  - ps: ssh-keyscan -t ecdsa -p 2222 -v localhost
  - ps: ssh-keyscan -t ecdsa -p 2222 localhost > "${env:USERPROFILE}/.ssh/known_hosts"
  - ps: ssh -A -v -i id_ecdsa git@localhost -p 2222 'git init --bare /srv/git/config.git'
  - ps: systeminfo /fo csv | ConvertFrom-Csv | select OS*, System*, Hotfix* | Format-List
  - ps: Get-VMNetworkAdapter -VMName *
  - ps: Get-VMNetworkAdapter -All
  - ps: Get-NetAdapter
  - ps: |
      $ipv4 = (Test-Connection -ComputerName $env:ComputerName -Count 1).IPV4Address.IPAddressToString
      Set-Item -path env:HOST_IP -value $ipv4
  - ipconfig
  - echo %HOST_IP%
  - ps: |
      cd resources/dockerfiles/windows/registry
      docker build -t stefanscherer/registry-windows -f Dockerfile .
      cd ../../../
  - docker run -d -p 5000:5000 --restart=always --name registry stefanscherer/registry-windows
  - sleep 4
  - docker pull hello-world:nanoserver-sac2016
  - docker pull nanoserver/iis
  - ps: |
      $ErrorActionPreference = 'Stop'
      $cnt = 0
      while ($cnt -lt 5) {
        $cnt++
        try {
          docker pull mcr.microsoft.com/windows/nanoserver@sha256:8f78a4a7da4464973a5cd239732626141aec97e69ba3e4023357628630bc1ee2
          break
        } catch {
          Start-Sleep 3
          Write-Verbose("Retrying docker pull command")
        }
      }
  - docker tag hello-world:nanoserver-sac2016 localhost:5000/hello-world:nanoserver
  - docker tag nanoserver/iis localhost:5000/nanoserver/iis
  - docker tag mcr.microsoft.com/windows/nanoserver@sha256:8f78a4a7da4464973a5cd239732626141aec97e69ba3e4023357628630bc1ee2 localhost:5000/microsoft/nanoserver
  - docker push localhost:5000/hello-world:nanoserver
  - docker push localhost:5000/nanoserver/iis
  - docker push localhost:5000/microsoft/nanoserver
  - cargo build --verbose

test_script:
  - ps: Set-Item -path env:RUST_BACKTRACE -value 1
  - ps: Set-Item -path env:RUST_LOG -value "hyper=trace,bollard=debug"
  - ps: Set-Item -path env:REGISTRY_HTTP_ADDR -value localhost:5000
  - cargo test --verbose --tests -- --nocapture --test-threads 1
  - ps: Set-Item -path env:DOCKER_HOST -value npipe:////./pipe/docker_engine
  - cargo test --verbose --tests -- --nocapture --test-threads 1 --test test_connect_with_defaults
